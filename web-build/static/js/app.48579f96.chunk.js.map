{"version":3,"sources":["src/firebase/config.js","src/screens/Login.js","src/screens/Register.js","src/screens/Post.js","src/components/SinglePost.js","src/components/Posts.js","src/screens/Home.js","App.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","firestoredb","storage","firebase","firestore","Login","props","state","email","password","error","alert","this","signInWithEmailAndPassword","then","userCredential","user","console","log","catch","code","errorMessage","message","setState","View","style","styles","container","TextInput","input","placeholder","blurOnSubmit","textContentType","onChangeText","text","keyboardType","secureTextEntry","Text","TouchableOpacity","button","onPress","handlePress","textButton","Component","StyleSheet","create","flex","flexDirection","justifyContent","backgroundColor","alignItems","padding","width","borderColor","borderWidth","color","marginVertical","fontFamily","marginTop","borderRadius","textAlign","height","fontSize","Register","username","confirm","createUserWithEmailAndPassword","updateProfile","displayName","response","finally","errorCode","Post","comment","collection","add","currentUser","createdAt","Date","now","likes","navigation","navigate","multiline","numberOfLines","value","handlePost","SinglePost","like","length","inline","Math","floor","fecha","usuario","where","limit","get","query","post","docs","postToUpdate","data","find","push","ref","update","handleLike","icon","faHeart","gap","paddingVertical","Posts","FlatList","posts","keyExtractor","toString","renderItem","item","Home","signOut","onSnapshot","querySnapshot","forEach","doc","arrayAux","filter","posteoRepetido","concat","mainText","handleLogout","containerButton","App","onAuthStateChanged","Drawer","createDrawerNavigator","NavigationContainer","Navigator","initialRouteName","Screen","name","Camera","component"],"mappings":"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","file":"static/js/app.48579f96.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport firebase from \"firebase\";\nimport app from 'firebase/app';\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyALvuIHd6n-6LlJyQ521DGGK7w-SZt0VPc\",\n  authDomain: \"rn-udesa-9fc4c.firebaseapp.com\",\n  projectId: \"rn-udesa-9fc4c\",\n  storageBucket: \"rn-udesa-9fc4c.appspot.com\",\n  messagingSenderId: \"187954354666\",\n  appId: \"1:187954354666:web:3d9b5d9c4948db051afa93\"\n};\n\n// Initialize Firebase\napp.initializeApp(firebaseConfig);\n\nexport const auth = app.auth();\n\nexport const storage = app.storage();\n\nexport const firestoredb = firebase.firestore();","import React, { Component } from 'react';\nimport { StyleSheet, Text, TextInput, TouchableOpacity, View} from 'react-native';\nimport { auth } from '../firebase/config';\n\nexport default class Login extends Component {\n    constructor (props){\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: null\n        }\n    }\n\n    handlePress (){\n        alert(`Email: ${this.state.email}, password: ${this.state.password}`)\n        auth.signInWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                const user = userCredential.user;\n                console.log(userCredential)\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.log(errorMessage);\n                this.setState({error});\n            });\n    }\n\n    render() {\n        return (\n            <View style = {styles.container}>\n                <TextInput style = {styles.input}\n                    placeholder = \"Email\"\n                    blurOnSubmit = {true}\n                    textContentType = \"emailAddress\"\n                    onChangeText = {text => this.setState({email: text})}\n                />\n                <TextInput style = {styles.input}\n                    placeholder = \"password\"\n                    keyboardType = \"defaul\"\n                    secureTextEntry = {true}\n                    onChangeText = {text => this.setState({password: text})}\n                />\n                {this.state.error && <Text>{this.state.error.message}</Text>}\n                <TouchableOpacity\n                    style = {styles.button}\n                    onPress = {()=> this.handlePress ()}\n                >\n                    <Text style = {styles.textButton}>\n                        Login\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create ({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor:\"#EADCA6\",\n        alignItems: 'center'\n    },\n    input: {\n        padding: 10,\n        width: '80%',\n        backgroundColor: \"#212121\",\n        borderColor: \"white\",\n        borderWidth: 2,\n        color: \"#D9CAB3\",\n        marginVertical: 4,\n        fontFamily: 'Oswald'\n    },\n    button: {\n        marginTop: 30,\n        padding: 10,\n        width: '40%',\n        backgroundColor: \"#6D9886\",\n        justifyContent: \"center\",\n        borderRadius: 5,\n        textAlign: \"center\",\n        height: 80,\n    },\n    textButton: {\n        fontSize: 25,\n        color: \"#212121\",\n    }\n})","import React, { Component } from 'react';\nimport { StyleSheet, TextInput, TouchableOpacity, View, Text} from 'react-native';\nimport { auth } from '../firebase/config';\n\nexport default class Register extends Component {\n    constructor (props){\n        super(props);\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            confirm: \"\",\n            error: null,\n        }\n    }\n\n    handlePress (){\n        alert(`Email: ${this.state.email}, password: ${this.state.password}`);\n        auth.createUserWithEmailAndPassword(this.state.email, this.state.password)\n            .then((userCredential) => {\n                // Signed in\n                const user = userCredential.user;\n                userCredential.user.updateProfile({\n                    displayName: this.state.username\n                })\n                .then(response => console.log(response) )\n                .catch(error => console.log(error))\n                .finally(alert(\"Usuario creado!\"));\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                console.log(errorCode, errorMessage);\n                alert(errorMessage);\n                this.setState({error})\n                // ..\n            });\n    }\n\n    render() {\n        return (\n            <View style = {styles.container}>\n                <TextInput style = {styles.input}\n                    placeholder = \"username\"\n                    blurOnSubmit = {true}\n                    onChangeText = {text => this.setState({username: text})}\n                />\n                <TextInput style = {styles.input}\n                    placeholder = \"Email\"\n                    blurOnSubmit = {true}\n                    textContentType = \"emailAddress\"\n                    onChangeText = {text => this.setState({email: text})}\n                />\n                <TextInput style = {styles.input}\n                    placeholder = \"password\"\n                    secureTextEntry = {true}\n                    onChangeText = {text => this.setState({password: text})}\n                />\n                <TextInput style = {styles.input}\n                    placeholder = \"confirm password\"\n                    secureTextEntry = {true}\n                    onChangeText = {text => this.setState({confirm: text})}\n                />\n                {this.state.error && <Text>{this.state.error.message}</Text>}\n                <TouchableOpacity\n                    style = {styles.button}\n                    onPress = {()=> this.handlePress ()}\n                >\n                    <Text style = {styles.textButton}>\n                        Register\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create ({\n    container: {\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor:\"#EADCA6\",\n        alignItems: 'center'\n    },\n    input: {\n        padding: 10,\n        width: '80%',\n        backgroundColor: \"#212121\",\n        borderColor: \"white\",\n        borderWidth: 2,\n        color: \"#D9CAB3\",\n        marginVertical: 4,\n        fontFamily: 'Oswald'\n    },\n    button: {\n        marginTop: 30,\n        padding: 10,\n        width: '40%',\n        backgroundColor: \"#6D9886\",\n        justifyContent: \"center\",\n        borderRadius: 5,\n        textAlign: \"center\",\n        height: 80,\n    },\n    textButton: {\n        fontSize: 25,\n        color: \"#212121\",\n    }\n})","import React, { Component } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View, TextInput } from 'react-native';\nimport { auth, firestoredb, storage } from '../firebase/config';\n\n\nexport default class Post extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            comment: \"\"\n        }\n    }\n\n    handlePost(){\n        firestoredb.collection('posts').add(\n            {\n                comment: this.state.comment,\n                username: auth.currentUser.displayName,\n                createdAt: Date.now(),\n                likes: []\n            })\n        .then(response => {\n            console.log(response)\n            this.setState({\n                comment: \"\"\n            })\n            this.props.navigation.navigate('Home')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n\n    }\n    \n    render() {\n        \n        return (\n            <View style = {styles.container}>\n                <TextInput style = {styles.input}\n                    placeholder = \"Your comment\"\n                    blurOnSubmit = {true}\n                    multiline = {true}\n                    numberOfLines = {3}\n                    onChangeText = {text => this.setState({comment: text})}\n                    value={this.state.comment}\n                />\n                \n                {this.state.error && <Text>{this.state.error.message}</Text>}\n                <TouchableOpacity\n                    style = {styles.button}\n                    onPress = {()=> this.handlePost ()}\n                >\n                    <Text style = {styles.textButton}>\n                        Post\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create ({\ncontainer: {\n    flex: 1,\n    flexDirection: \"column\",\n    justifyContent: 'center',\n    backgroundColor:\"#EADCA6\",\n    alignItems: 'center'\n},\ninput: {\n    padding: 10,\n    width: '80%',\n    backgroundColor: \"#212121\",\n    borderColor: \"white\",\n    borderWidth: 2,\n    color: \"#D9CAB3\",\n    marginVertical: 4,\n    fontFamily: 'Oswald'\n},\nbutton: {\n    marginTop: 30,\n    padding: 10,\n    width: '40%',\n    backgroundColor: \"#6D9886\",\n    justifyContent: \"center\",\n    borderRadius: 5,\n    textAlign: \"center\",\n    height: 80,\n},\ntextButton: {\n    fontSize: 25,\n    color: \"#212121\",\n}\n})","import React, { Component } from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport {faHeart } from '@fortawesome/free-solid-svg-icons'\nimport { auth, firestoredb } from '../firebase/config';\nimport firebase from 'firebase/app';\n\nexport default function SinglePost (props){\n\n    function handleLike(fecha){\n        const usuario = auth.currentUser.displayName;\n        firestoredb.collection('posts').where('createdAt', '==', fecha).limit(1).get().then(query => {\n            const post = query.docs[0];\n            let postToUpdate = post.data();\n            const user = postToUpdate.likes.find(user=> user === usuario)\n            \n            if (!user) {\n                postToUpdate.likes.push(usuario);\n                post.ref.update(postToUpdate);\n            }\n        });\n    }\n\n    return(\n        <View style = {styles.container}>\n            <Text style={styles.comment}>{props.comment}</Text>\n            <Text style={styles.like}>{props.likes.length} like</Text>\n            <View style = {styles.inline}>\n                <Text style={styles.like}>{props.username}</Text>\n                <Text style={styles.like}>{Math.floor((Date.now() - props.createdAt)/(1000 * 3600))} hours ago</Text>\n            </View>\n            <TouchableOpacity style = {styles.inline} onPress={()=> handleLike(props.createdAt)}>\n                <FontAwesomeIcon icon={faHeart}/>\n                <Text style={styles.like}>Like</Text>\n            </TouchableOpacity>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"#e3ce7c\",\n        marginVertical: 10,\n        padding: 10,\n        flexDirection: 'column',\n        justifyContent: \"flex-start\",\n        width: 350\n    },\n    inline: {\n        flexDirection: \"row\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        gap: 10\n    },\n    comment: {\n        fontSize: 20\n    },\n    like: {\n        paddingVertical: 5,\n        fontSize: 16\n    }\n})","import React, { Component } from 'react';\nimport { FlatList } from 'react-native';\nimport Post from '../screens/Post';\nimport SinglePost from './SinglePost';\n\nexport default class Posts extends Component{\n    constructor (props){\n        super(props);\n        this.state = {}\n    }\n    \n    render(){\n        return(\n            <FlatList\n                data = {this.props.posts}\n                keyExtractor = {post => post.createdAt.toString()}\n                renderItem = {({item}) => {\n                    return <SinglePost {...item}/>\n                }}\n            ></FlatList>\n        )\n    }\n}","import React, { Component } from 'react'\nimport { Text, TouchableOpacity, View, StyleSheet } from 'react-native'\nimport Posts from '../components/Posts';\nimport { auth, firestoredb } from '../firebase/config';\n\nexport default class Home extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            posts: []\n        }\n    }\n\n    handleLogout(){\n        auth.signOut()\n        .then(()=>{\n            alert('User sign out!');    \n        })\n    }\n    \n    componentDidMount(){\n        firestoredb.collection(\"posts\")\n            .onSnapshot((querySnapshot) => { //En cada cambio de la collection se extrae el snapShot\n                    querySnapshot.forEach((doc) => {\n                        // doc.data() is never undefined for query doc snapshots\n                        const data = doc.data(); //Extraemos los datos del documento en cuestión\n                        const arrayAux = this.state.posts.filter(post => post.createdAt !== data.createdAt) //Filtramos de nuestro estado a aquellos post que NO sea el repetido\n                        const posteoRepetido = this.state.posts.find(post => post.createdAt === data.createdAt) //Encontramos el posteo repetido (si lo hubiera)\n                        \n                        //Si no hay posteos repetidos..\n                        if (!posteoRepetido){\n                            this.setState({\n                                posts: this.state.posts.concat({\n                                    comment: data.comment,\n                                    username: data.username,\n                                    likes: data.likes,\n                                    createdAt: data.createdAt\n                                    })\n                            });\n                        }\n\n                        //Si encontramos un posteo repetido, actualizamos su array de likes\n                        else {\n                            posteoRepetido.likes = data.likes;\n                            arrayAux.push(posteoRepetido);\n                            this.setState({\n                                posts: arrayAux\n                            })\n                        }\n                    })\n            });\n    }\n\n    render(){\n        return(\n            <View style = {styles.container}>\n                <Text style ={styles.mainText}>Bienvenido a UDeSA app \n                    {this.props.user && this.props.user.email}</Text>\n                {this.props.user !== null &&\n                <>\n                    <TouchableOpacity \n                        style = {styles.button}\n                        onPress = {()=> this.handleLogout()}\n                    >\n                        <Text style = {styles.textButton}>\n                            LogOut\n                        </Text>\n                    </TouchableOpacity>\n                    <Posts posts = {this.state.posts}></Posts>\n                </>\n                }\n                {this.props.user === null && \n                    <View style = {styles.containerButton}>\n                        <TouchableOpacity \n                            style = {styles.button}\n                            onPress = {()=> this.props.navigation.navigate('Register')}\n                        \n                        >\n                            <Text style = {styles.textButton}>\n                                Register\n                            </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity \n                            style = {styles.button}\n                            onPress = {()=> this.props.navigation.navigate('Login')}\n                        >\n                            <Text style = {styles.textButton}>\n                                Login\n                            </Text>\n                        </TouchableOpacity>\n                    </View>\n                \n                }\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    mainText:{\n        textAlign: 'center',\n        fontSize: 30,\n    },\n    container: {\n        width: \"100%\",\n        flex: 1,\n        flexDirection: \"column\",\n        justifyContent: 'center',\n        backgroundColor:\"#EADCA6\",\n        alignItems: 'center'\n    },\n    containerButton: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        gap: 50,\n    },\n    button: {\n        marginTop: 30,\n        padding: 10,\n        width: '50%',\n        backgroundColor: \"#6D9886\",\n        justifyContent: \"center\",\n        borderRadius: 5,\n        textAlign: \"center\",\n        height: 80,\n    },\n    textButton: {\n        fontSize: 25,\n        color: \"#212121\",\n    }\n})","import React, { Component } from 'react';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Login from './src/screens/Login';\nimport Register from './src/screens/Register';\nimport Home from './src/screens/Home';\nimport { auth } from './src/firebase/config';\nimport Post from './src/screens/Post';\n\nexport default class App extends Component {\n\n  constructor (props){\n    super(props);\n    this.state = {\n      usuario: null\n    }\n  }\n\n  componentDidMount(){\n    auth.onAuthStateChanged( user => {\n      if (user){\n        this.setState({usuario: user})\n      } else {\n        console.log(\"No hay usuario loggeado\");\n        this.setState({usuario: null})\n      }\n    })\n  }\n\n  render(){\n    const Drawer = createDrawerNavigator()\n\n    return (\n      <NavigationContainer>\n        <Drawer.Navigator initialRouteName=\"Home\">\n          {this.state.usuario &&\n          <>\n            <Drawer.Screen name=\"Home\">\n              { (props)=> <Home {...props} user = {this.state.usuario}/>  }\n            </Drawer.Screen>\n            <Drawer.Screen name=\"Camera\">\n              { (props)=> <Camera {...props} user = {this.state.usuario}/>  }\n            </Drawer.Screen>\n            <Drawer.Screen name=\"Post\">\n              { (props)=> <Post {...props} user = {this.state.usuario}/>  }\n            </Drawer.Screen>\n          </>\n          }\n          {!this.state.usuario && \n          <>\n            <Drawer.Screen name=\"Login\" component={Login} />\n            <Drawer.Screen name=\"Register\" component={Register} />\n          </>\n          }\n        </Drawer.Navigator>\n      </NavigationContainer>\n    )\n  }\n}\n\n"],"sourceRoot":""}